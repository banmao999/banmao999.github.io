{"meta":{"title":"半猫的小站","subtitle":"呜啦啦啦啦啦啦啊","description":"一个小小的学习屋","author":"半猫","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2020-07-07T15:01:48.000Z","updated":"2020-07-07T15:13:04.879Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"自我埋汰的简介","date":"2019-04-07T09:07:37.000Z","updated":"2020-07-07T15:12:13.947Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"这是一个正在学习前端和后端的菜鸟回忆录 我会将所有的笔记放在这里，估计只有我自己看吧~~"},{"title":"标签","date":"2020-07-07T15:04:58.000Z","updated":"2020-07-07T15:13:15.455Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"站点地图","date":"2020-07-07T15:08:20.000Z","updated":"2020-07-07T15:13:25.967Z","comments":true,"path":"sitemap/index.html","permalink":"http://yoursite.com/sitemap/index.html","excerpt":"","text":""}],"posts":[{"title":"3-CSS2","slug":"3-CSS2","date":"2020-07-08T15:40:04.036Z","updated":"2020-07-08T15:39:10.634Z","comments":true,"path":"2020/07/08/3-CSS2/","link":"","permalink":"http://yoursite.com/2020/07/08/3-CSS2/","excerpt":"","text":"CSSEmmet语法Emmet语法的前身是Zen coding，它使用缩写来提高html/css的编写速度，VScode内部已经集成该语法。 快速生成HTML结构语法 生成标签 直接输入标签名后按Tab键即可，比如div按tab，生成《div》《/div》 如果想生成多个相同标签 加上就可以了，比如div*3 如果有父子级关系的标签，可以用&gt; 比如ul&gt;li就可以了 如果有兄弟关系的标签，用+就可以了 比如div+p 如果生成带有类名或者id名字的，直接写 .demo或者 #two Tab键就可以了 如果生成的div类名是有顺序的，可以用自增符号$配合，比如 .demo$*5 按Tab键 如果想要在生成的标签内部写内容可以用{ }表示，比如 div{内容} 按Tab键 快速生成CSS样式语法CSS基本采取简写形式即可： 比如w200 按Tab 可以生成 width: 200px; 比如lh26 按Tab 可以生成 line-height: 26px; 快速格式化代码VScode右键点击格式化文档/shift+alt+F即可 也可以设置保存页面时自动格式化代码： 文件——》【首选项】——》【设置】 搜索emmet.include; 在setting.json下的【用户】中添加以下语句：“editor.formatOnType”: true,“editor.formatOnSave”: true 只需设置一次，以后都可以自动保存格式化代码 CSS的复合选择器复合选择器建立在基础选择器之上，对基础选择器进行组合形成的 复合选择器可以更准确、高效地选择目标元素（标签） 复合选择器是由两个或多个基础选择器，通过不同方式组合而成的 常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器 后代选择器后代选择器（包含选择器）可以选择父元素里面的子元素，其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔，当标签发生嵌套时，内层标签就成为外层标签的后代 12元素1 元素2 &#123; 样式声明 &#125;**表示选择元素1里面的所有元素2** 元素1和元素2中间用空格隔开 元素1是父级，元素2是子级，最终选择的是元素2 元素1和元素2可以是任意基础选择器 子元素选择器子元素选择器（子选择器）只能选择作为某一元素的最近一级子元素。简单理解就是选亲儿子元素 12元素1 &gt; 元素2 &#123; 样式声明 &#125;** 选择元素1里面的所有直接后代（子元素）元素2 ** 元素1和元素2中间用大于号隔开 元素1 是父级，元素2是子级，最终选择的是元素2 元素2必须是亲儿子 并集选择器并集选择器可以选择多组标签，同时为他们定义相同的样式，通常用于集体声明 并集选择器是各选择器通过英文逗号（, ）连接而成，任何形式的选择器都可以作为并集选择器的一部分 12元素1 , 元素2 &#123; 样式声明 &#125;** 选择元素1和元素2 ** 注意：最后一个选择器不需要加逗号 伪类选择器伪类选择器用于向某些选择器添加特殊效果，比如给链接添加特殊效果，或选择第1个，第n个元素 伪类选择器书写最大的特点是用冒号（:）表示，比如 :hover、 :fist-child 链接伪类选择器1234a:link /* 选择所有未被访问的链接 */a:visit /* 选择所有已被访问的链接 */a:hover /* 选择鼠标指针位于其上的链接 */a:active /* 选择活动链接（鼠标按下未弹起的链接） */ 注意事项： 为了确保生效，按照LVHA的循顺序声明 :link - :visited - :hover - :active 记忆法：love hate或者lv 包包 hao 因为a链接在浏览器中具有默认样式，所以实际工作中都需要给链接单独指定样式 链接伪类选择器实际工作中的写法： 12345678910/* 链接正常状态下 */a &#123; color: #333; text-decoration: none;&#125;/* 鼠标悬停在链接时 */a:hover &#123; color: #369; text-decoration: underline; &#125; :focus伪类选择器:focus 伪类选择器用于选取获得焦点的表单元素 焦点就是光标，一般情况《input》类表单元素才能获取，因此这个选择器也主要针对表单元素来说 123input:focus&#123; background-color: yellow;&#125; 总结 选择器 作用 特征 隔开符号及用法 后代选择器 选择后代元素 可以是子孙后代 符号是空格 .nav a 子代选择器 选择最近一级元素 只选亲儿子 符号是大于 .nav&gt;p 并集选择器 选择某些相同样式的元素 可以用于集体声明 符号是逗号 链接伪类选择器 选择不同状态的链接 跟链接相关 重点记住a{ }和a:hover实际开发写法 :focus 选择获得光标的表单 跟表单相关 input:focus记住这个写法 CSS元素显示模式元素显示模式就是元素（标签）以什么方式进行显示 HTML一般分为块元素和行内元素 块元素常见块元素有《h1》-《h6》、《p》、《div》、《ul》、《ol》、《li》 块元素的特点： 自己独占一行 高度、宽度、外边距、内边距都可以控制 宽度默认是容器的100% 是一个容器及盒子，里面可以放行内或者块级元素 注意： 文字类的元素内不能使用块级元素 《p》标签主要用于存放文字，因此《p》里面不能放块级元素，特别是不能放《div》 同理，《h1-h6》都是文字类块级标签，里面不能放其他块级元素 行内元素常见的行内元素有《a》、《strong》、《b》、《em》、《i》、《del》、《s》、《ins》、《u》、《span》等，也成为内联元素 行内元素特点： 相邻行内元素在一行上，一行可以显多个 高、宽直接设置是无效的 默认宽度就是它本身内容的宽度 行内元素只能容纳文本或者其他行内元素 注意： 链接里面不能放链接 特殊情况链接a里面可以放块级元素，但是给《a》转换一下块级模式最安全 行内块元素在行内元素中有几个特殊的标签，《img/》、《input/》、《td》，它们同时具有块元素和行内元素的特点，有些资料称它们为行内块元素 行内块元素特点： 和相邻行内元素（行内块）在一行上，但是它们之间有空白缝隙，一行可以显示多个 默认宽度就是它本身内容的宽度 高度、行高、外边距以及内边距都可以控制 总结 元素模式 元素排列 设置样式 默认宽度 包含 块级元素 一行只能放一个块级元素 可以设置宽高 容器的100% 容器级可以包含任何标签 行内元素 一行可以放多个行内元素 不可以直接设置宽高 本身内容的宽度 容纳文本或其他行内元素 行内块元素 一行放多个行内块元素 可以设置宽高 本身内容的宽度 元素显示模式的转换特殊情况下，需要元素模式的转换，一个模式的元素需要另外一种模式的特性，比如想要增加链接《a》的触发范围 转换为块元素：display: block; 转换为行内元素：display: inline; 转换为行内块：display: inline-block; 小技巧——单行文字垂直居中的代码CSS没有提供文字垂直居中的代码，但是可以通过： 让文字的行高等于盒子的高度 就可以让文字在当前盒子内垂直居中 12line-height=\"height\";** 引号中的height为用户定义的盒子高度数值** CSS的背景通过CSS背景属性，可以给页面元素添加背景样式 背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等 背景颜色background-color定义元素背景颜色，一般默认为transparent（透明） 背景图片background-image描述元素的背景图片，实际开发常见于logo或者装饰性的小图片，超大背景图，优点是便于控制位置 12backgroud-image: url(\"URL\");** 不要落下 url() ** 背景平铺background-repeat对背景图像进行平铺 属性值 描述 repeat 背景图在纵向和横向上平铺（重复）【默认值】 no-repeat 背景图不平铺 repeat-x 在横向上平铺 repeat-y 在纵向平铺 背景图片位置background-position属性改变图片在背景中的位置 12background-position: x y;** x坐标和y坐标，可以使用方位名词或者精确单位 ** 参数值 说明 length 百分数|由浮点数和单位标识符组成的长度值 position X坐标：left | center | right Y坐标：top | center | bottom 【方位名词】 参数是方位名词 如果指定的两个值都是方位名词，则两个值前后顺序无关 如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐 参数是精确单位 如果参数值是精确坐标，那么第一个值一定是X坐标，第二个值一定是Y坐标 如果只指定一个数值，那该数值一定是X坐标，另一个默认垂直居中 参数是混合单位 如果指定的两个值是精确单位和方位名词混合使用，则第一个是X坐标，第二个是Y坐标 背景图像固定（背景附着）background-attachment属性设置背景图是否固定或者随着页面的其余部分滚动，后期可制作视差滚动的效果 参数值 作用 scroll 背景图像随对象内容滚动 fixed 背景图像固定 背景复合写法为了简化背景属性的代码，可以将这些属性合并简写在同一个属性background中，当使用简写属性时，没有特定的书写顺序，一般约定顺序为： background：背景颜色 背景图片 背景平铺 背景图像滚动 背景图片位置 背景色半透明CSS3提供了背景颜色半透明的效果： 12background: rgba(0, 0, 0, 0.3);** 前三个为RGB取色 ** 最后一个参数是alpha透明度，取值在0~1之间 习惯把0.3的0省略掉，写为background：rgba(0, 0, 0, .3); 注意： 背景半透明是指盒子背景半透明，盒子里的内容不受影响 CSS3新增属性，是IE9+版本浏览器才支持的 CSS三大特性层叠性相同选择器给设置相同的样式，此时一个样式会覆盖（层叠）另一个冲突的样式，层叠性主要解决样式冲突问题 层叠性原则； 样式冲突，遵循的原则是就近原则，哪个样式离结构近，就执行哪个样式 样式不冲突，不会层叠 继承性CSS中，子标签会继承父标签的某些样式 优先级当同一个元素指定多个选择器，就会产生优先级 选择器相同，则执行层叠性 选择器不同，则根据选择器权重执行 选择器 权重 继承或者* 0，0，0，0 元素选择器 0，0，0，1 类选择器，伪类选择器 0，0，1，0 ID选择器 0，1，0，0 行内样式 style=“” 1，0，0，0 ！important 重要的 ∞ 无穷大 权重叠加： 如果是复合选择器，则会有权重叠加，需要计算权重","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/tags/CSS/"}]},{"title":"3-CSS1","slug":"3-CSS1","date":"2020-07-08T02:37:18.982Z","updated":"2020-07-08T02:39:38.409Z","comments":true,"path":"2020/07/08/3-CSS1/","link":"","permalink":"http://yoursite.com/2020/07/08/3-CSS1/","excerpt":"CSSCSS是层叠样式表（Cascading Style Sheets）的简称，也是一种标记语言 CSS主要用于设置HTML页面的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局和外观显示样式 CSS语法规范CSS规则由两个主要部分：选择器以及一条或多条声明 123456&lt;style&gt; p (选择器)&#123; color: red;(声明) font-size: 25px; &#125;&lt;/style&gt;","text":"CSSCSS是层叠样式表（Cascading Style Sheets）的简称，也是一种标记语言 CSS主要用于设置HTML页面的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局和外观显示样式 CSS语法规范CSS规则由两个主要部分：选择器以及一条或多条声明 123456&lt;style&gt; p (选择器)&#123; color: red;(声明) font-size: 25px; &#125;&lt;/style&gt; 选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式 声明中的属性和属性值以键值对的形式出现 属性是对指定对象设置的样式属性，如字体大小、文本颜色 属性和属性值之间用英文“:”分开 多个键值对之间用英文“;”分开 CSS代码风格空格规范 123456&lt;style&gt; p (选择器)&#123; color: red;(声明) font-size: 25px; &#125;&lt;/style&gt; 属性值前面，冒号后面，保留一个空格 选择器和大括号中间保留空格 选择器分类选择器分为基础选择器和复合选择器两类 基础选择器 基础选择器由单个选择器组成 其中包括：标签选择器、类选择器、id选择器、通配符选择器 标签选择器标签选择器（元素选择器）指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式 作用 标签选择器可以把某一类标签全部选中，比如所有《div》和所有《span》 优点 能快速为页面中同一类型的标签统一设置样式 缺点 不能设计差异化样式，只能选择全部的当前标签 类选择器如果想要差异化选择不同的标签，单独选一个或者几个标签，可以使用类选择器 1234.类型&#123; 属性1: 属性值1; ……&#125; *在类名前有一个“ . ” * 结构需要用calss属性来调用class类的意思 123&lt;div class='用户自定义类名'&gt; 内容&lt;/div&gt; 类选择器-多类名给一个标签指定多个类名，从而达到更多的选择目的，这些类名都可以选出这个标签，即一个标签有多个名字 多类名使用方式123&lt;div class='red font20'&gt; 亚瑟&lt;/div&gt; 在标签class属性中写多个类名 多个类名中间用空格分开 使用场景 可以把一些标签元素相同的样式（共同的部分）放在一个类里 这些标签都可以调用这个公共的类，然后调用自己独有的类 从而节省CSS代码，统一修改 id选择器HTML元素以id属性来设置id选择器，CSS中id选择器以“#”来定义 id选择器和类选择器的区别: 类选择器（class）好比人的名字，一个人可以有多个名字，一个名字可以被多个人使用 id选择器好比人的身份证号码，唯一使用，不能重复 id选择器和类选择器最大的不同在于使用次数 类选择器在修改样式中用的最多，id选择器一般用于页面唯一性的元素上，常和JavaScript搭配使用 通配符选择器在CSS中，通配符选择器使用“*”定义，表示选取页面中的所有元素（标签） 1234*&#123; 属性1: 属性值1; ……&#125; 通配符选择器不需要调用 特殊情况才使用 总结 基础选择器 作用 特点 使用情况 用法 标签选择器 可以选出所有相同的标签 不能差异化选择 较多 p{color: red;} 类选择器 可以选出1个或多个标签 可以根据需求选择 非常多 .nav{color: red;} id选择器 一次只能选择1个标签 ID属性只能在每个HTML文档中出现一次 一般和JS搭配 #nav{color: red;} 通配符选择器 选择所有标签 选择的太多，有部分不需要 特殊情况使用 *{color: red;} CSS字体属性CSS Fonts属性用于定义字体系列、大小、粗细和文字样式 字体系列CSS使用font-family属性定义文本的字体系列 123p&#123; font-family: \"Microsoft YaHei\", tahoma, arial;&#125; 各个字体之间必须使用英文状态下的逗号隔开 一般情况下，如果有空格隔开的多个单词组成的字体，加引号 尽量使用系统默认自带字体 当定义多个字体时，浏览器依次读取，并取第一个系统带有的字体 字体大小CSS使用font-size属性定义字体大小 123p&#123; font-size: 20px;&#125; px(像素)大小是网页常用单位 谷歌浏览器默认字体大小为16px 不同浏览器默认显示字体大小可能不同，尽量给一个明确的值 可以给body指定整个页面内容的字体大小 标题标签（h1-h6）需要单独指定文字大小 字体粗细CSS使用font-weight属性设置文字粗细 123p&#123; font-weight: bold;&#125; 属性值 描述 normal 默认值（不加粗） bold 定义粗体 100-900 400等同于normal，700等同于bold，注意数字后面不跟单位 文字样式CSS使用font-style属性设置文本的风格 123p&#123; font-style: normal;&#125; 属性值 作用 normal 默认值。显示标准字体样式 italic 显示斜体样式 注意： 平时很少给字体加斜体，反而要给斜体标签（em，i）改为不倾斜 字体复合属性字体属性可以把以上文字样式综合起来，节约代码 123body&#123; font: font-style font-weight font-size/line-height font-family;&#125; 123body&#123; font: italic 700 16px 'Microsoft YaHei';&#125; 注意： 使用font属性时，必须按照以上语法格式中的顺序书写，不能更换顺序，并且各个属性间以空格隔开 不需要设置的属性可以省略，但必须保留font-size和font-family属性，否则font属性将不起作用 总结 属性 表示 注意 font-size 字号 通常用的单位是px像素，一定要跟上单位 font-family 字体 按照团队约定来写字体 font-weight 粗细 加粗是700或者bold不加粗是400或者normal数字不跟单位 font-style 样式 倾斜是italic，不倾斜是normal font 复合 1.有顺序，不能更改顺序 2.其中字号和字体必须同时出现 文本属性CSS Text（文本）属性可定义文本的外观（颜色、对齐、装饰、缩进、行间距） 文本颜色color属性定义文本的颜色 表示 属性值 预定义的颜色值 red, green, blue, pink 十六进制 #FF0000, #FF6600, #29D794 RGB代码 rgb(255,0,0)或者rgb(100%,0%,0%) 常用十六进制 对齐文本text-align属性设置元素内文本内容的水平对齐方式 属性值 解释 left 左对齐（默认） right 右对齐 center 居中对齐 装饰文本text-decoration属性规定添加到文本的装饰，可以给文本添加下划线、删除线、上划线 属性值 描述 none 默认，无装饰线 underline 下划线，链接a自带下划线 overline 上划线 line-through 删除线 可在链接a的属性中用none删除下划线 文本缩进text-indent属性用来指定文本的第一行的缩进，通常将段落的首行缩进 123p&#123; text-indent: 2em;&#125; em是一个相对单位，就说当前元素（font-size）1个文字大小，如果当前元素没有设置大小，则会按照父元素的1个文字大小 行间距line-height属性设置行间的距离 行间距=上间距+文本高度+下间距 总结 属性 表示 注意 color 颜色 通常用十六进制 text-align 对齐 设定文字水平的对齐方式 text-indent 缩进 通常用于段落首行缩进2个字的距离，2em text-decoration 装饰 下划线 underline 取消下划线 none line-height 行高 控制行与行之间的距离 CSS的引用方式内部样式表（内嵌式）写到HTML页面内部，将所有CSS代码抽取出来，单独放到一个《style》标签中 123456&lt;style&gt; div&#123; color: red; &#125; ……&lt;/style&gt; 《style》标签理论上可以放在HTML文档的任何地方，但一般会放在文档的《head》标签中 控制当前HTML页面的样式 行内样式表（内联式）是在元素标签内部的sytle属性中设定CSS样式，适合修改简单样式 123&lt;p sytle='color: red; font-size: 20px;'&gt; 内容&lt;/p&gt; style其实就说标签的属性 在引号中间，写法要符合CSS规范 可以控制当前标签样式 外部样式表样式单独写到CSS文件中，之后把CSS文件引入到HTML页面 引入外部样式表分为两步： 新建一个后缀名为 .css的样式文件，把所有CSS代码放入此文件中 在HTML页面中，使用《link》标签引入这个文件 1&lt;link rel='stylesheet' href='css文件路径' 属性 作用 rel 定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件 href 定义所链接外部样式表文件的URL，可以是相对路径也可以是绝对路径 Chrome调试工具打开调试工具打开Chrome浏览器，按下F12键或者右击页面空白处-&gt;检查 使用调试工具 Ctrl+滚轮可以放大开发者工具代码大小 左边是HTML元素结构，右边是CSS样式 右边CSS样式可以改动数值和查看颜色 Ctrl+0 复原浏览器大小 如果点击元素，发现右边没有样式引入，极有可能是类名或者样式引入错误 如果有样式，但样式前面有黄色感叹号，则是样式属性书写错误","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/tags/CSS/"}]},{"title":"2-Html标签3","slug":"2-Html标签3","date":"2020-07-07T12:08:43.348Z","updated":"2020-07-08T02:42:05.650Z","comments":true,"path":"2020/07/07/2-Html标签3/","link":"","permalink":"http://yoursite.com/2020/07/07/2-Html%E6%A0%87%E7%AD%BE3/","excerpt":"HTMl基本标签表格标签基本语法1234567&lt;table&gt; &lt;tr&gt; &lt;td&gt;单元格内的文字&lt;/td&gt; …… &lt;/tr&gt; ……&lt;/table&gt;","text":"HTMl基本标签表格标签基本语法1234567&lt;table&gt; &lt;tr&gt; &lt;td&gt;单元格内的文字&lt;/td&gt; …… &lt;/tr&gt; ……&lt;/table&gt; 《table》《/table》是用于定义表格的标签 《tr》《/tr》定义表格中的行，必须嵌套在table中 《td》《/td》定义表格中的单元格，必须嵌套在tr中 表头单元格标签《th》标签表示HTML表格的表头部分，文本内容加粗居中显示 表格属性 属性名 属性值 描述 align left、center、right 规定表格相对周围元素的对齐方式 border 1或者“ ” 表格单元是否拥有边框，默认为“”无边框 cellpadding 像素值 单元边沿与其内容之间的空白，默认1px cellspacing 像素值 单元格之间的空白，默认2px width 像素值或百分比 表格的宽度 表格结构标签表格可能很长，为了更好的表示表格的语义，将表格分为头部和主体 《thead》标签 == 表格的头部区域 《tbody》标签 == 表格的主体区域 合并单元格合并单元格方式 跨行合并：rowspan=’合并单元格的个数’ 跨列合并：colspan=’合并单元格的个数’ 目标单元格 跨行：最上侧单元格为目标单元格 跨列：最左侧单元格为目标单元格 合并步骤 先确定是跨行还是跨列 找到目标单元格，写上合并方式=合并的单元格数量。 删除多余的单元格 列表标签列表用来布局，列表的特点是整齐、整洁、有序 列表分为三类：无序列表、有序列表、自定义列表 无序列表《ul》标签表示无序列表，一般会以项目符号呈现列表项，而列表项用《li》定义 12345&lt;ul&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; ……&lt;/ul&gt; 无序列表各个列表项没有顺序级别，是并列的 《ul》《/ul》中只能嵌套《li》《/li》，不能输入其他标签或者文字 《li》《/li》相当于一个容器，里面可以存放所有元素 无序列表带有自己的样式属性 有序列表《ol》标签定义有序列表，列表排序以数字显示，且使用《li》标签定义列表项 12345&lt;ol&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; ……&lt;/ol&gt; 自定义列表自定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号 《dl》标签定义描述列表，该标签会与《dt》（定义项目/名字）和《dd》（描述每个项目/名字）一起使用 123456&lt;dl&gt; &lt;dt&gt;名词1&lt;/dt&gt; &lt;dd&gt;名词1解释1&lt;/dd&gt; &lt;dd&gt;名词1解释2&lt;/dd&gt; ……&lt;/dl&gt; 表单标签表单的目的是为了收集用户信息 表单的组成在HTML中，一个完整的表单通常由表单域、表单控件（表单元素）和提示信息构成 表单域一个包含表单元素的区域 在HTML标签中，《from》标签用于定义表单域，以实现用户信息的收集和传递 《from》会把它范围内的表单元素信息提交给服务器 123&lt;from action='URL地址' method='提交方式' name='表单域名称'&gt; 各种表单控件&lt;/from&gt; 属性 属性值 作用 action URL地址 指定接收并处理表单数据的服务器程序的URL地址 method get/post 设置表单数据的提交方式 name 名称 指定表单的名称，以区分同一个页面中的多个表单域 表单控件（表单元素）《input》表单元素用于收集用户信息 在《input》标签中，包含一个type属性，根据不同的type属性值，输入的字段拥有很多种形式（文本、复选框、单选按钮、按钮等） 1&lt;input type='属性值' /&gt; 属性值 描述 button 可点击按钮（多数情况下用于通过JavaScript启动脚本 checkbox 复选框 file 输入字段和“浏览”按钮，供文件上传 hidden 隐藏的输入字段 image 图像形式的提交按钮 password 密码字段，字符被掩码 radio 单选按钮 reset 重置按钮，清除表单中的所有数据 submit 提交按钮，把表单数据发送到服务器 text 单行的输入字段，可在其中输入文本，默认宽度20个字符 除type属性外，《input》标签有其他属性： 属性 属性值 描述 name 由用户定义 定义input元素的名称 value 由用户定义 规定input的值 placeholder 由用户定义 在文本框中显示提示信息 checked checked 规定此input元素首次加载时应当被选中 maxlength 正整数 规定输入字段中的字符的最大长度 注意： name和value是每个表单元素都有的属性值，主要给后台人员使用 name表单元素的名字，要求单选按钮和复选框要有相同的name值 checked属性主要针对单选按钮和复选框，打开页面时默认选中某个表单元素 maxlength是用户可以在表单元素输入的最大字符数，一般较少使用 label标签《label》标签为input元素定义标注（标签） 《label》标签用于绑定一个表单元素，当点击《label》标签内的文本时，浏览器会自动将焦点（光标）转到或者选择对应的表单元素上，增加用户体验 12&lt;label for='sex'&gt; 男 &lt;/label&gt;&lt;input type='radio' name='sex' id='sex' /&gt; 核心：《label》标签的for属性应当与相关元素的id属性相同 《select》表单元素如果有多个选项，想节约空间时，可使用《select》标签控件定义下拉列表 1234567&lt;select&gt; &lt;option&gt; 选项1 &lt;/option&gt; &lt;option&gt; 选项2 &lt;/option&gt; &lt;option&gt; 选项3 &lt;/option&gt; &lt;option&gt; 选项4 &lt;/option&gt; ……&lt;/select&gt; 注意： 《select》中至少包含一对《option》 在《option》中定义selected=“select”时，当前项即为默认选中项 《textarea》表单元素当用户输入内容较多的情况下，可使用文本域《text area》定义多行文本输入的控件 使用多行文本输入控件，可以输入更多文字，常见于留言板、评论 123&lt;textarea rows='3' cols='20'&gt; 文本内容&lt;/textarea&gt; 查阅文档W3C：http://www.w3school.com.cn/ 点击下载 下载 下载 MDN：https://developer.mozilla.org/zh-CN/","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://yoursite.com/tags/HTML/"}]},{"title":"2-Html标签2","slug":"2-Html标签2","date":"2020-07-06T10:21:59.158Z","updated":"2020-07-08T02:41:57.674Z","comments":true,"path":"2020/07/06/2-Html标签2/","link":"","permalink":"http://yoursite.com/2020/07/06/2-Html%E6%A0%87%E7%AD%BE2/","excerpt":"HTML常用标签图像标签和路径在HTML标签中，《img》标签用于定义HTML页面中的图像。单标签 1&lt;img src='图像URL' /&gt; src是《img》标签的必须属性，用于指定图像文件的途径和文件名 属性 属性值 说明 src 图片路径 必须熟悉 alt 文本 替换文本，图像不能显示时显示的文字 title 文本 提示文本，鼠标放在图像上，显示的文字 width 像素 设置图像的宽度 height 像素 设置图像高度 border 像素 设置图像的边框粗细","text":"HTML常用标签图像标签和路径在HTML标签中，《img》标签用于定义HTML页面中的图像。单标签 1&lt;img src='图像URL' /&gt; src是《img》标签的必须属性，用于指定图像文件的途径和文件名 属性 属性值 说明 src 图片路径 必须熟悉 alt 文本 替换文本，图像不能显示时显示的文字 title 文本 提示文本，鼠标放在图像上，显示的文字 width 像素 设置图像的宽度 height 像素 设置图像高度 border 像素 设置图像的边框粗细 注意： 图像属性必须写在标签名后面 属性不分先后顺序，属性之间空格分隔 属性采取键值对格式，属性=“属性值” 路径相对路径以引用文件所在位置为参考基础，建立的目录路径，即图片相对于HTML文件的位置 相对路径分类 符合 说明 同一级 图像位于HTML文件同一级 下一级 / 图像位于HTML文件下一级，《img src=’images/baidu,jpg’》 上一级 ../ 图像位于HTML上一级 绝对路径指目录下的绝对位置，通常从盘符开始的路径 “D:\\web\\img\\logo.gif” 或者”https://www.baidu.com/images/logo.gif&quot; 超链接标签《a》从一个页面链接到另一个页面 1&lt;a href='跳转目标' target='目标窗口弹出方式'&gt;文本或图像&lt;/a&gt; 属性 作用 href 指定链接目标的URL地址，必须属性 target 指定打开方式，_self为默认值___blank为在新窗口中打开 锚点链接 在链接文本的herf属性中，设置属性值为#名字的形式，如： &lt;a herf='#two'&gt;click&lt;/a&gt; 1234567* 找到目标位置标签，里面添加一个**id属性&#x3D;刚才的名字**，如：* ~~~html &lt;h3 id&#x3D;&#39;two&#39;&gt; show up &lt;&#x2F;h3&gt; 注释HTML中注释以“《!–”开头，以“–》”结束 特殊字符`","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://yoursite.com/tags/HTML/"}]},{"title":"2 Html标签","slug":"2 Html标签","date":"2020-07-06T08:18:07.639Z","updated":"2020-07-08T02:41:48.775Z","comments":true,"path":"2020/07/06/2 Html标签/","link":"","permalink":"http://yoursite.com/2020/07/06/2%20Html%E6%A0%87%E7%AD%BE/","excerpt":"HTML标签HTML语法规范 HTML标签是由&lt;&gt;（尖括号）包围的关键词中 大部分标签成对存在，eg. 有些特殊的单标签 双标签可分为两类：包含关系和并列关系 标签名 定义 说明 HTML标签 页面内最大的标签，根标签 文档的头部 在head标签中必须要设置的标签是title 文档的标题 让页面拥有属于自己的网页标题 文档的主体 元素包含文档的所有内容","text":"HTML标签HTML语法规范 HTML标签是由&lt;&gt;（尖括号）包围的关键词中 大部分标签成对存在，eg. 有些特殊的单标签 双标签可分为两类：包含关系和并列关系 标签名 定义 说明 HTML标签 页面内最大的标签，根标签 文档的头部 在head标签中必须要设置的标签是title 文档的标题 让页面拥有属于自己的网页标题 文档的主体 元素包含文档的所有内容 DOCTYPE、lang以及字符集的作用1、文档类型声明标签​ &lt;!DOCTYPE&gt;文档类型声明标签，作用是告诉浏览器使用哪种HTML版本来显示网页 1&lt;!DOCTYPE html&gt; 这句代码的意思：当前页面采用的是HTML5版本显示 注意： 《!DOCTYPE》声明位于文档中的第一行 《!DOCTYPE》不是一个HTML标签 2、lang语言种类用来定义当前文档显示的语言 en定义语言为英语 zh-CN定义语言为中文 简单来说，定义为en就是英文网页，定义为zh-CN就是中文网页 其实对文档显示来说，定义为en的文档也可以显示中文，反之相同，lang定义是对浏览器和搜索引擎作用的。 3、字符集字符集（Character set）是多个字符的集合，以便于计算机识别和存储各种文字。 在《head》标签内，可以通过《meta》标签的charset属性来规定HTML文档应该使用哪种字符编码。 1&lt;meta charset='UTF-8' /&gt; charset常用的值有：GB2312、BIG5、GBK和UTF-8，其中UTF-8被称为万国码，基本包含了世界所有国家需要用到的字符。 注意：上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用‘UTF-8’编码。 HTML常用标签标签语义根据标签的语义，在合适的地方给一个合理的标签，可以让页面结构清晰。 标题标签为了使网页具有语义化，HTML提供6个等级的网页标题：《h1》-《h6》 语义：作为标题使用，且依据重要性递减 特点： 加了标题的文字会变粗，字号依次变大 一个标题独占一行 段落标签和换行标签《p》标签用于定义段落 语义：可以把HTML文档分割为若干段落 特点： 文本在段落中会根据浏览器窗口大小自动换行 段落之间保有空隙 《br /》标签用于强制换行 特点 《br /》是单标签 只是换行，没有段落空隙 文本格式化标签 语义 标签 说明 加粗 《strong》《/strong》或《b》《/b》 更推荐《strong》标签 倾斜 《em》或者《i》 更推荐《em》 删除线 《del》或者《s》 更推荐《del》 下划线 《ins》或者《u》 更推荐《ins》 《div》和《span》标签没有语义，作为盒子装内容。 division-分割 span-跨度、跨距 特点： 《div》标签用来布局，一行只能放一个 《span》标签用来布局，一行可以放多个","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://yoursite.com/tags/HTML/"}]},{"title":"1 Web标准","slug":"1 Web标准","date":"2020-07-06T08:18:07.639Z","updated":"2020-07-08T02:41:38.356Z","comments":true,"path":"2020/07/06/1 Web标准/","link":"","permalink":"http://yoursite.com/2020/07/06/1%20Web%E6%A0%87%E5%87%86/","excerpt":"Web标准由W3C组织（万维网联盟）制定 1、为什么需要标准​ 浏览器不同，显示页面或者排版有差异 ​ 更容易被搜寻引擎搜索 ​ 降低网站流量费用 ​ 使网站易于维护 ​ 提高页面浏览速度","text":"Web标准由W3C组织（万维网联盟）制定 1、为什么需要标准​ 浏览器不同，显示页面或者排版有差异 ​ 更容易被搜寻引擎搜索 ​ 降低网站流量费用 ​ 使网站易于维护 ​ 提高页面浏览速度 2、Web标准的构成主要包括结构、表现、行为 标准 说明 结构 结构用于对网页元素进行整理和分类，主要学习HTML 表现 表现用于设置网页元素的版式、颜色、大小，主要指CSS 行为 行为指网页模型的定义以及交互的编写，主要学习JavaScript Web标准提出的最佳方案：结构、样式、行为相分离S 结构写在HTML文件中，表现写在CSS文件中，行为写在JavaScript文件中","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"Web","slug":"Web","permalink":"http://yoursite.com/tags/Web/"}]},{"title":"testtest","slug":"testtest","date":"2017-07-07T14:55:45.000Z","updated":"2020-07-08T02:42:33.203Z","comments":true,"path":"2017/07/07/testtest/","link":"","permalink":"http://yoursite.com/2017/07/07/testtest/","excerpt":"","text":"为什么归档打不开了！！","categories":[{"name":"Testing","slug":"Testing","permalink":"http://yoursite.com/categories/Testing/"}],"tags":[{"name":"dairy","slug":"dairy","permalink":"http://yoursite.com/tags/dairy/"}]}],"categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"},{"name":"Testing","slug":"Testing","permalink":"http://yoursite.com/categories/Testing/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"http://yoursite.com/tags/HTML/"},{"name":"Web","slug":"Web","permalink":"http://yoursite.com/tags/Web/"},{"name":"dairy","slug":"dairy","permalink":"http://yoursite.com/tags/dairy/"}]}